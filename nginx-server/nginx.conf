# events {
#     worker_connections 1024;
# }

# http {
#     upstream proyecto-app {
#         server proyecto-app:80;
#     }

#     server {
#         listen 80;
#         server_name app2.fazttech.store;
        
#         # Redirección HTTP a HTTPS
#         return 301 https://$server_name$request_uri;
#     }

#     server {
#         listen 443 ssl http2;
#         server_name app2.fazttech.store;

#         # SSL configuration (Let's Encrypt)
#         ssl_certificate /etc/letsencrypt/live/app2.fazttech.store/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/app2.fazttech.store/privkey.pem;
        
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#         ssl_prefer_server_ciphers off;

#         location / {
#             proxy_pass http://proyecto-app;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header X-Forwarded-Host $host;
#             proxy_connect_timeout 60s;
#             proxy_send_timeout 60s;
#             proxy_read_timeout 60s;
#         }

#         # Health check
#         location /health {
#             access_log off;
#             return 200 "healthy\n";
#             add_header Content-Type text/plain;
#         }
#     }
# }
worker_processes 1;

events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream app {
        server pagina:80;  # Nombre del servicio en docker-compose
    }

    # --- HTTP (redirección a HTTPS) ---
    server {
        listen 80;
        server_name localhost;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # --- HTTPS ---
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/certs/localhost.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass         http://app;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
}
