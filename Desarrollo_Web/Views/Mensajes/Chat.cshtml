@model IEnumerable<DemonSlayer.Models.Mensaje>

@{
    var destinatario = ViewBag.Destinatario as DemonSlayer.Models.Usuario;
    ViewData["Title"] = $"Chat con {destinatario?.NombreCompleto}";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>💬 Chat con @destinatario?.NombreCompleto</h1>
        <a asp-controller="Usuarios" asp-action="Index" class="btn btn-secondary">← Conversaciones</a>
    </div>

    <!-- Área de Chat -->
    <div class="chat-container border rounded p-3 bg-light" style="max-height: 500px; overflow-y: auto;">
        @if (Model.Any())
        {
            foreach (var mensaje in Model)
            {
                var esMio = mensaje.RemitenteId == ViewBag.UserId;

                <div class="message @(esMio ? "message-sent" : "message-received") mb-3">
                    <div class="@(esMio ? "ms-auto" : "")" style="max-width: 70%;">
                        <div class="message-text @(esMio ? "bg-primary text-white" : "bg-white") p-2 rounded border">
                            @mensaje.Texto
                        </div>
                        <small class="text-muted">@mensaje.Fecha.ToString("HH:mm")</small>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center text-muted py-4">
                <p>💬 No hay mensajes todavía.</p>
                <p>¡Inicia la conversación!</p>
            </div>
        }
    </div>

    <!-- Formulario para enviar mensaje -->
    <div class="mt-3">
        <form asp-action="EnviarMensaje" method="post" id="mensajeForm">
            <input type="hidden" name="destinatarioId" value="@ViewBag.DestinatarioId" />
            <div class="input-group">
                <textarea name="texto" id="textoMensaje" class="form-control" placeholder="Escribe tu mensaje..."
                          rows="2" maxlength="500" required></textarea>
                <button type="submit" class="btn btn-success">Enviar</button>
            </div>
            <div class="mt-1">
                <small class="text-muted">
                    <span id="contadorCaracteres">0</span>/500 caracteres
                </small>
                @if (TempData["ErrorMensaje"] != null)
                {
                    <div class="text-danger small">@TempData["ErrorMensaje"]</div>
                }
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Contador de caracteres
        document.getElementById('textoMensaje').addEventListener('input', function() {
            const contador = document.getElementById('contadorCaracteres');
            const caracteres = this.value.length;
            contador.textContent = caracteres;

            // Cambiar color cuando se acerca al límite
            if (caracteres > 450) {
                contador.className = 'text-warning';
            } else if (caracteres > 490) {
                contador.className = 'text-danger';
            } else {
                contador.className = 'text-muted';
            }
        });

        // Validación antes de enviar
        document.getElementById('mensajeForm').addEventListener('submit', function(e) {
            const texto = document.getElementById('textoMensaje').value;

            if (texto.length > 500) {
                e.preventDefault();
                alert('El mensaje no puede tener más de 500 caracteres. Tu mensaje tiene ' + texto.length + ' caracteres.');
                return false;
            }

            if (texto.trim() === '') {
                e.preventDefault();
                alert('Por favor escribe un mensaje.');
                return false;
            }
        });
    </script>

    <style>
        .chat-container {
            background-color: #f8f9fa;
        }

        .message-sent {
            text-align: right;
        }

        .message-received {
            text-align: left;
        }

        .message-text {
            word-wrap: break-word;
        }
    </style>
}